{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction SomeTestReactiveFormComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SomeTestReactiveFormComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name must be at least 4 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SomeTestReactiveFormComponent_div_11_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name cannot be Bob. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SomeTestReactiveFormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, SomeTestReactiveFormComponent_div_11_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵtemplate(2, SomeTestReactiveFormComponent_div_11_div_2_Template, 2, 0, \"div\", 11);\n    i0.ɵɵtemplate(3, SomeTestReactiveFormComponent_div_11_div_3_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.name.errors == null ? null : ctx_r1.name.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.name.errors == null ? null : ctx_r1.name.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.name.errors == null ? null : ctx_r1.name.errors[\"forbiddenName\"]);\n  }\n}\n\nfunction SomeTestReactiveFormComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Validating...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SomeTestReactiveFormComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Alter ego is already taken. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SomeTestReactiveFormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, SomeTestReactiveFormComponent_div_17_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.alterEgo.errors == null ? null : ctx_r3.alterEgo.errors[\"uniqueAlterEgo\"]);\n  }\n}\n\nfunction SomeTestReactiveFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Name cannot match alter ego. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SomeTestReactiveFormComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const p_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", p_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(p_r11);\n  }\n}\n\nfunction SomeTestReactiveFormComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Power is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SomeTestReactiveFormComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, SomeTestReactiveFormComponent_div_24_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.power.errors == null ? null : ctx_r6.power.errors[\"required\"]);\n  }\n}\n\nexport class SomeTestReactiveFormComponent {\n  constructor() {\n    this.powers = ['Really Smart', 'Super Flexible', 'Weather Changer'];\n    this.hero = {\n      name: 'Dr.',\n      alterEgo: 'Dr. What',\n      power: this.powers[0]\n    };\n  }\n\n  ngOnInit() {\n    this.heroForm = new FormGroup({\n      name: new FormControl(this.hero.name, [Validators.required, Validators.minLength(4) //forbiddenNameValidator(/bob/i)\n      ]),\n      alterEgo: new FormControl(this.hero.alterEgo, {\n        // asyncValidators: [this.alterEgoValidator.validate.bind(this.alterEgoValidator)],\n        updateOn: 'blur'\n      }),\n      power: new FormControl(this.hero.power, Validators.required)\n    }); //{ validators: identityRevealedValidator }); // <-- add custom validator at the FormGroup level\n  }\n\n  get name() {\n    return this.heroForm.get('name');\n  }\n\n  get power() {\n    return this.heroForm.get('power');\n  }\n\n  get alterEgo() {\n    return this.heroForm.get('alterEgo');\n  }\n\n}\n\nSomeTestReactiveFormComponent.ɵfac = function SomeTestReactiveFormComponent_Factory(t) {\n  return new (t || SomeTestReactiveFormComponent)();\n};\n\nSomeTestReactiveFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SomeTestReactiveFormComponent,\n  selectors: [[\"app-some-test-reactive-form\"]],\n  decls: 31,\n  vars: 11,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [\"formDir\", \"ngForm\"], [3, \"hidden\"], [1, \"cross-validation\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"alterEgo\"], [\"type\", \"text\", \"id\", \"alterEgo\", \"formControlName\", \"alterEgo\", 1, \"form-control\"], [4, \"ngIf\"], [\"class\", \"alert alert-danger alter-ego-errors\", 4, \"ngIf\"], [\"class\", \"cross-validation-error-message alert alert-danger\", 4, \"ngIf\"], [\"for\", \"power\"], [\"id\", \"power\", \"formControlName\", \"power\", \"required\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-danger\", \"alter-ego-errors\"], [1, \"cross-validation-error-message\", \"alert\", \"alert-danger\"], [3, \"value\"]],\n  template: function SomeTestReactiveFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r13 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Reactive Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵtemplate(11, SomeTestReactiveFormComponent_div_11_Template, 4, 3, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Alter Ego\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵtemplate(16, SomeTestReactiveFormComponent_div_16_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(17, SomeTestReactiveFormComponent_div_17_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, SomeTestReactiveFormComponent_div_18_Template, 2, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 5)(20, \"label\", 14);\n      i0.ɵɵtext(21, \"Hero Power\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"select\", 15);\n      i0.ɵɵtemplate(23, SomeTestReactiveFormComponent_option_23_Template, 2, 2, \"option\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, SomeTestReactiveFormComponent_div_24_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"p\");\n      i0.ɵɵtext(26, \"Complete the form to enable the Submit button.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 17);\n      i0.ɵɵtext(28, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function SomeTestReactiveFormComponent_Template_button_click_29_listener() {\n        i0.ɵɵrestoreView(_r13);\n\n        const _r0 = i0.ɵɵreference(4);\n\n        return i0.ɵɵresetView(_r0.resetForm({}));\n      });\n      i0.ɵɵtext(30, \"Reset\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.heroForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", _r0.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"cross-validation-error\", (ctx.heroForm.errors == null ? null : ctx.heroForm.errors[\"identityRevealed\"]) && (ctx.heroForm.touched || ctx.heroForm.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.name.invalid && (ctx.name.dirty || ctx.name.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.alterEgo.pending);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.alterEgo.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.heroForm.errors == null ? null : ctx.heroForm.errors[\"identityRevealed\"]) && (ctx.heroForm.touched || ctx.heroForm.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.powers);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.power.invalid && ctx.power.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.heroForm.invalid);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzb21lLXRlc3QtcmVhY3RpdmUtZm9ybS5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,UAAhC,QAAiD,gBAAjD;;;;;;;ICiBUC;IACEA;IACFA;;;;;;IACAA;IACEA;IACFA;;;;;;IACAA;IACEA;IACFA;;;;;;IAXFA;IAGEA;IAGAA;IAGAA;IAGFA;;;;;IATQA;IAAAA;IAGAA;IAAAA;IAGAA;IAAAA;;;;;;IAWRA;IAA8BA;IAAaA;;;;;;IAEzCA;IACEA;IACFA;;;;;;IAHFA;IACEA;IAGFA;;;;;IAHQA;IAAAA;;;;;;IAMVA;IACEA;IACFA;;;;;;IAOEA;IAA6CA;IAAKA;;;;;IAAjBA;IAAYA;IAAAA;;;;;;IAI7CA;IAAwCA;IAAkBA;;;;;;IAD5DA;IACEA;IACFA;;;;;IADQA;IAAAA;;;;ADhDd,OAAM,MAAOC,6BAAP,CAAoC;EA+BxCC;IA7BA,cAAS,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,iBAAnC,CAAT;IAEA,YAAO;MAAEC,IAAI,EAAE,KAAR;MAAeC,QAAQ,EAAE,UAAzB;MAAqCC,KAAK,EAAE,KAAKC,MAAL,CAAY,CAAZ;IAA5C,CAAP;EA2BiB;;EAvBjBC,QAAQ;IACN,KAAKC,QAAL,GAAgB,IAAIV,SAAJ,CAAc;MAC5BK,IAAI,EAAE,IAAIN,WAAJ,CAAgB,KAAKY,IAAL,CAAUN,IAA1B,EAAgC,CACpCJ,UAAU,CAACW,QADyB,EAEpCX,UAAU,CAACY,SAAX,CAAqB,CAArB,CAFoC,CAGpC;MAHoC,CAAhC,CADsB;MAM5BP,QAAQ,EAAE,IAAIP,WAAJ,CAAgB,KAAKY,IAAL,CAAUL,QAA1B,EAAoC;QAC5C;QACAQ,QAAQ,EAAE;MAFkC,CAApC,CANkB;MAU5BP,KAAK,EAAE,IAAIR,WAAJ,CAAgB,KAAKY,IAAL,CAAUJ,KAA1B,EAAiCN,UAAU,CAACW,QAA5C;IAVqB,CAAd,CAAhB,CADM,CAaN;EACD;;EACO,IAAJP,IAAI;IAAK,OAAO,KAAKK,QAAL,CAAcK,GAAd,CAAkB,MAAlB,CAAP;EAAoC;;EAExC,IAALR,KAAK;IAAK,OAAO,KAAKG,QAAL,CAAcK,GAAd,CAAkB,OAAlB,CAAP;EAAqC;;EAEvC,IAART,QAAQ;IAAK,OAAO,KAAKI,QAAL,CAAcK,GAAd,CAAkB,UAAlB,CAAP;EAAwC;;AA3BjB;;;mBAA7BZ;AAA6B;;;QAA7BA;EAA6Ba;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MCR1ClB,+BAAuB,CAAvB,EAAuB,IAAvB;MAEIA;MAAaA;MAEjBA,mCAA+C,CAA/C,EAA+C,KAA/C,EAA+C,CAA/C,EAA+C,CAA/C,EAA+C,KAA/C,EAA+C,CAA/C,EAA+C,CAA/C,EAA+C,KAA/C,EAA+C,CAA/C,EAA+C,CAA/C,EAA+C,OAA/C,EAA+C,CAA/C;MAO0BA;MAAIA;MACtBA;MAGAA;MAaFA;MAEAA,gCAAwB,EAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MACwBA;MAASA;MAC/BA;MAGAA;MACAA;MAKFA;MAEAA;MAGFA;MAEAA,gCAAwB,EAAxB,EAAwB,OAAxB,EAAwB,EAAxB;MACqBA;MAAUA;MAC7BA;MAEEA;MACFA;MAEAA;MAGFA;MAEAA;MAAGA;MAA8CA;MACjDA;MAEsCA;MAAMA;MAC5CA;MACQA;QAAAA;;QAAA;;QAAA,OAASA,iCAAT;MAA8B,CAA9B;MAAgCA;MAAKA;;;;;;MA7D3CA;MAAAA;MAECA;MAAAA;MAE2BA;MAAAA;MAOpBA;MAAAA;MAoBAA;MAAAA;MACAA;MAAAA;MAOFA;MAAAA;MASkBA;MAAAA;MAGlBA;MAAAA;MAQAA;MAAAA","names":["FormControl","FormGroup","Validators","i0","SomeTestReactiveFormComponent","constructor","name","alterEgo","power","powers","ngOnInit","heroForm","hero","required","minLength","updateOn","get","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\triof\\RiderProjects\\Calculator\\Calculator\\ClientApp\\src\\app\\some-test-reactive-form\\some-test-reactive-form.component.ts","C:\\Users\\triof\\RiderProjects\\Calculator\\Calculator\\ClientApp\\src\\app\\some-test-reactive-form\\some-test-reactive-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-some-test-reactive-form',\n  templateUrl: './some-test-reactive-form.component.html',\n  styleUrls: ['./some-test-reactive-form.component.css']\n})\nexport class SomeTestReactiveFormComponent implements OnInit {\n\n  powers = ['Really Smart', 'Super Flexible', 'Weather Changer'];\n\n  hero = { name: 'Dr.', alterEgo: 'Dr. What', power: this.powers[0] };\n\n  heroForm!: FormGroup;\n\n  ngOnInit(): void {\n    this.heroForm = new FormGroup({\n      name: new FormControl(this.hero.name, [\n        Validators.required,\n        Validators.minLength(4),\n        //forbiddenNameValidator(/bob/i)\n      ]),\n      alterEgo: new FormControl(this.hero.alterEgo, {\n        // asyncValidators: [this.alterEgoValidator.validate.bind(this.alterEgoValidator)],\n        updateOn: 'blur'\n      }),\n      power: new FormControl(this.hero.power, Validators.required)\n    });\n    //{ validators: identityRevealedValidator }); // <-- add custom validator at the FormGroup level\n  }\n  get name() { return this.heroForm.get('name')!; }\n\n  get power() { return this.heroForm.get('power')!; }\n\n  get alterEgo() { return this.heroForm.get('alterEgo')!; }\n\n\n\n  constructor() { }\n}\n","<div class=\"container\">\n\n<h2>Reactive Form</h2>\n\n<form [formGroup]=\"heroForm\" #formDir=\"ngForm\">\n\n  <div [hidden]=\"formDir.submitted\">\n\n    <div class=\"cross-validation\" [class.cross-validation-error]=\"heroForm.errors?.['identityRevealed'] && (heroForm.touched || heroForm.dirty)\">\n      <div class=\"form-group\">\n\n        <label for=\"name\">Name</label>\n        <input type=\"text\" id=\"name\" class=\"form-control\"\n               formControlName=\"name\" required>\n\n        <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\n             class=\"alert alert-danger\">\n\n          <div *ngIf=\"name.errors?.['required']\">\n            Name is required.\n          </div>\n          <div *ngIf=\"name.errors?.['minlength']\">\n            Name must be at least 4 characters long.\n          </div>\n          <div *ngIf=\"name.errors?.['forbiddenName']\">\n            Name cannot be Bob.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"alterEgo\">Alter Ego</label>\n        <input type=\"text\" id=\"alterEgo\" class=\"form-control\"\n               formControlName=\"alterEgo\">\n\n        <div *ngIf=\"alterEgo.pending\">Validating...</div>\n        <div *ngIf=\"alterEgo.invalid\" class=\"alert alert-danger alter-ego-errors\">\n          <div *ngIf=\"alterEgo.errors?.['uniqueAlterEgo']\">\n            Alter ego is already taken.\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"heroForm.errors?.['identityRevealed'] && (heroForm.touched || heroForm.dirty)\" class=\"cross-validation-error-message alert alert-danger\">\n        Name cannot match alter ego.\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"power\">Hero Power</label>\n      <select id=\"power\" class=\"form-control\"\n              formControlName=\"power\" required>\n        <option *ngFor=\"let p of powers\" [value]=\"p\">{{p}}</option>\n      </select>\n\n      <div *ngIf=\"power.invalid && power.touched\" class=\"alert alert-danger\">\n        <div *ngIf=\"power.errors?.['required']\">Power is required.</div>\n      </div>\n    </div>\n\n    <p>Complete the form to enable the Submit button.</p>\n    <button type=\"submit\"\n            class=\"btn btn-default\"\n            [disabled]=\"heroForm.invalid\">Submit</button>\n    <button type=\"button\" class=\"btn btn-default\"\n            (click)=\"formDir.resetForm({})\">Reset</button>\n  </div>\n</form>\n</div>\n"]},"metadata":{},"sourceType":"module"}