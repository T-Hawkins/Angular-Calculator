{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nexport class SomeTestReactiveFormComponent {\n  constructor() {\n    this.powers = ['Really Smart', 'Super Flexible', 'Weather Changer'];\n    this.hero = {\n      name: 'Dr.',\n      alterEgo: 'Dr. What',\n      power: this.powers[0]\n    };\n  }\n\n  ngOnInit() {\n    this.heroForm = new FormGroup({\n      name: new FormControl(this.hero.name, [Validators.required, Validators.minLength(4) //forbiddenNameValidator(/bob/i)\n      ]),\n      alterEgo: new FormControl(this.hero.alterEgo, {\n        // asyncValidators: [this.alterEgoValidator.validate.bind(this.alterEgoValidator)],\n        updateOn: 'blur'\n      }),\n      power: new FormControl(this.hero.power, Validators.required)\n    }); //{ validators: identityRevealedValidator }); // <-- add custom validator at the FormGroup level\n  }\n\n  get name() {\n    return this.heroForm.get('name');\n  }\n\n  get power() {\n    return this.heroForm.get('power');\n  }\n\n  get alterEgo() {\n    return this.heroForm.get('alterEgo');\n  }\n\n}\n\nSomeTestReactiveFormComponent.ɵfac = function SomeTestReactiveFormComponent_Factory(t) {\n  return new (t || SomeTestReactiveFormComponent)();\n};\n\nSomeTestReactiveFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SomeTestReactiveFormComponent,\n  selectors: [[\"app-some-test-reactive-form\"]],\n  decls: 2,\n  vars: 0,\n  template: function SomeTestReactiveFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"some-test-reactive-form works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzb21lLXRlc3QtcmVhY3RpdmUtZm9ybS5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,UAAhC,QAAiD,gBAAjD;;AAOA,OAAM,MAAOC,6BAAP,CAAoC;EA6BxCC;IA3BA,cAAS,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,iBAAnC,CAAT;IAEA,YAAO;MAAEC,IAAI,EAAE,KAAR;MAAeC,QAAQ,EAAE,UAAzB;MAAqCC,KAAK,EAAE,KAAKC,MAAL,CAAY,CAAZ;IAA5C,CAAP;EAyBiB;;EArBjBC,QAAQ;IACN,KAAKC,QAAL,GAAgB,IAAIT,SAAJ,CAAc;MAC5BI,IAAI,EAAE,IAAIL,WAAJ,CAAgB,KAAKW,IAAL,CAAUN,IAA1B,EAAgC,CACpCH,UAAU,CAACU,QADyB,EAEpCV,UAAU,CAACW,SAAX,CAAqB,CAArB,CAFoC,CAGpC;MAHoC,CAAhC,CADsB;MAM5BP,QAAQ,EAAE,IAAIN,WAAJ,CAAgB,KAAKW,IAAL,CAAUL,QAA1B,EAAoC;QAC5C;QACAQ,QAAQ,EAAE;MAFkC,CAApC,CANkB;MAU5BP,KAAK,EAAE,IAAIP,WAAJ,CAAgB,KAAKW,IAAL,CAAUJ,KAA1B,EAAiCL,UAAU,CAACU,QAA5C;IAVqB,CAAd,CAAhB,CADM,CAaN;EACD;;EACO,IAAJP,IAAI;IAAK,OAAO,KAAKK,QAAL,CAAcK,GAAd,CAAkB,MAAlB,CAAP;EAAoC;;EAExC,IAALR,KAAK;IAAK,OAAO,KAAKG,QAAL,CAAcK,GAAd,CAAkB,OAAlB,CAAP;EAAqC;;EAEvC,IAART,QAAQ;IAAK,OAAO,KAAKI,QAAL,CAAcK,GAAd,CAAkB,UAAlB,CAAP;EAAwC;;AA3BjB;;;mBAA7BZ;AAA6B;;;QAA7BA;EAA6Ba;EAAAC;EAAAC;EAAAC;IAAA;MCR1CC;MAAGA;MAA8BA","names":["FormControl","FormGroup","Validators","SomeTestReactiveFormComponent","constructor","name","alterEgo","power","powers","ngOnInit","heroForm","hero","required","minLength","updateOn","get","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\triof\\RiderProjects\\Calculator\\Calculator\\ClientApp\\src\\app\\some-test-reactive-form\\some-test-reactive-form.component.ts","C:\\Users\\triof\\RiderProjects\\Calculator\\Calculator\\ClientApp\\src\\app\\some-test-reactive-form\\some-test-reactive-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-some-test-reactive-form',\n  templateUrl: './some-test-reactive-form.component.html',\n  styleUrls: ['./some-test-reactive-form.component.css']\n})\nexport class SomeTestReactiveFormComponent implements OnInit {\n\n  powers = ['Really Smart', 'Super Flexible', 'Weather Changer'];\n\n  hero = { name: 'Dr.', alterEgo: 'Dr. What', power: this.powers[0] };\n\n  heroForm!: FormGroup;\n\n  ngOnInit(): void {\n    this.heroForm = new FormGroup({\n      name: new FormControl(this.hero.name, [\n        Validators.required,\n        Validators.minLength(4),\n        //forbiddenNameValidator(/bob/i)\n      ]),\n      alterEgo: new FormControl(this.hero.alterEgo, {\n        // asyncValidators: [this.alterEgoValidator.validate.bind(this.alterEgoValidator)],\n        updateOn: 'blur'\n      }),\n      power: new FormControl(this.hero.power, Validators.required)\n    });\n    //{ validators: identityRevealedValidator }); // <-- add custom validator at the FormGroup level\n  }\n  get name() { return this.heroForm.get('name')!; }\n\n  get power() { return this.heroForm.get('power')!; }\n\n  get alterEgo() { return this.heroForm.get('alterEgo')!; }\n\n  constructor() { }\n}\n","<p>some-test-reactive-form works!</p>\n"]},"metadata":{},"sourceType":"module"}